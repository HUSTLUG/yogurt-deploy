version: "3"

services:
  redis:
    image: redis
    container_name: "cache"
    ports:
      - "6379:6379"
    volumes:
      - "./data:/data"
    networks:
      - hust-mirror
    environment:
      TZ: Asia/Shanghai
  db:
    image: postgres:12-alpine
    container_name: "db"
    restart: on-failure
    environment:
      POSTGRES_USER: hlug
      POSTGRES_PASSWORD: hlug
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - "./data/db:/var/lib/postgresql/data"
      - "./scripts/init.sql:/docker-entrypoint-initdb.d/create_tables.sql"
    networks:
      - hust-mirror

  backend:
    image: walawalawala/yogurt-backend:latest
    container_name: backend
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - hust-mirror
    volumes:
      - "../source:/source"
      - "./config.yaml:/mirror/config.yaml"
      - "./log/backend:/log"
    depends_on:
      - db
      - redis
    environment:
      TZ: Asia/Shanghai

  frontend:
    restart: always
    image: hust-sync-frontend:latest
    container_name: hust-sync-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/ssl:/ssl
      #- ./caddy/dist:/dist
      - ./log/frontend:/log
      - ../source:/mirror
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    environment:
      DOC_URL: https://doc.hlug.cn/
    networks:
      - hust-mirror

  rsyncd:
    restart: always
    image: toendeavour/rsyncd-alpine
    container_name: rsyncd
    ports:
      - "873:873"
    volumes:
      - ./rsyncd:/config
      - ./log/rsyncd:/log
      - ../source:/data/mirror

networks:
  hust-mirror:
